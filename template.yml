Resources:
# Create a VPC
  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      Tags:
        - Key: Name
          Value: Terraform Vpc

# Create a Public subnet in AZ1
  mySubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: "us-west-2a"
      Tags:
      - Key: "Name"
        Value: "Public subnet 1"

# Create a Private subnet in AZ1
  mySubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: "us-west-2a"
      Tags:
      - Key: "Name"
        Value: "Private subnet 1"
  
# Create a Public subnet in AZ2
  mySubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: "us-west-2b"
      Tags:
      - Key: "Name"
        Value: "Public subnet 1"

# Create a Private subnet in AZ2
  mySubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.3.0/24
      AvailabilityZone: "us-west-2b"
      Tags:
      - Key: "Name"
        Value: "Private subnet 1"

# Create an IGW
  myInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: "Name"
        Value: "CF internet gateway"

# Attach IGW to a VPC
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
         Ref: myVPC
      InternetGatewayId:
         Ref: myInternetGateway

# Create public route table
  publicRouteTable:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId:  
          Ref: myVPC
        Tags:
        - Key: "Name"
          Value: "Public RT"

# Create a route to an IGW 
  publicRoute:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId:
         Ref: publicRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId:
         Ref: myInternetGateway

# Create security group
  FridayInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http and ssh to client host
      VpcId: 
          Ref: myVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0